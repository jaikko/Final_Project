version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
        auth:
          username: $DOCKER_HUB_USERNAME
          password: $DOCKER_HUB_PASSWORD  # context / project UI env-var reference
      web: Dockerfile.web
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Setup env and install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            pytest
      - setup_remote_docker
      - run:
          name: Build and push Docker image
          command: |
            TAG=0.1$CIRCLE_BUILD_NUM
            docker build -t jaykoo/final_app:$TAG .
            echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
            docker push jaykoo/final_app:$TAG

  
  deploy:
    machine:
        enabled: true
    working_directory: ~/circleci-demo-workflows
    environment:
      HEROKU_APP: $HEROKU_APP # define env var $HEROKU_APP
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: bash .circleci/setup-heroku.sh # run a script to set up Heroku

      - run:
          command: |
            git push heroku sequential-branch-filter:master
            heroku run rake db:migrate
            sleep 5 # sleep for 5 seconds to wait for dynos
            heroku restart

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: sequential-branch-filter